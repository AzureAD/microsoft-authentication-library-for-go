trigger:
  - 4gust/keyvault-labauth

pool:
  vmImage: "ubuntu-latest"

steps:
  - task: GoTool@0
    inputs:
      version: "1.22.3"
  - task: Go@0
    inputs:
      command: "get"
      arguments: "-d -v -t -d ./..."
      workingDirectory: "$(System.DefaultWorkingDirectory)"
    displayName: "Install dependencies"
  - task: Go@0
    inputs:
      command: "build"
      arguments: "./apps/..."
      workingDirectory: "$(System.DefaultWorkingDirectory)"
    displayName: "Build"
  # - task: Go@0
  #   inputs:
  #     command: "test"
  #     arguments: "-race -short ./apps/cache/... ./apps/confidential/... ./apps/public/... ./apps/internal/..."
  #     workingDirectory: "$(System.DefaultWorkingDirectory)"
  #   displayName: "Run Unit Tests"
  - task: AzureKeyVault@2
    displayName: "Connect to Key Vault"
    inputs:
      azureSubscription: "AuthSdkResourceManager" # string. Workload identity service connection to use managed identity authentication
      KeyVaultName: "msidlabs" # string. Required. The name of the Key Vault containing the secrets.
      #setting secrets filter to fetch only MSIDLABCertificate cert from the vault
      SecretsFilter: "LabAuth" # string. Required. Specifies the secret to download. Use '*' for all secrets.
      #RunAsPreJob: false # boolean. Make secrets available to whole job. Default: false.

  - task: Bash@3
    displayName: Installing certificate
    inputs:
      targetType: "inline"
      script: |
        echo "The source code is located in: $(Build.SourcesDirectory)"
        ls $(Build.SourcesDirectory)
        echo $(LabAuth) | base64 -d > $(Build.SourcesDirectory)/cert.pfx
        openssl pkcs12 -in $(Build.SourcesDirectory)/cert.pfx -out $(Build.SourcesDirectory)/cert.pem -nodes -passin pass:''

  - task: Go@0
    inputs:
      command: "test"
      arguments: "-race ./apps/tests/integration/..."
      workingDirectory: "$(System.DefaultWorkingDirectory)"
    displayName: "Run Integration Tests"
