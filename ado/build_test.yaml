trigger: 
 - main

pool:
   vmImage: 'ubuntu-latest'

steps: 
- task: GoTool@0
  inputs:
    version: '1.22.3'
    
- task: Go@0
  inputs:
    command: 'get'
    arguments: '-d -v -t -d ./...'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
  displayName: "Install dependencies"
  
- task: Go@0
  inputs:
    command: 'build'
    arguments: './apps/...'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
  displayName: "Build"

# Begin Azure Key Vault integration
- task: AzureKeyVault@2
  displayName: 'Connect to Key Vault'
  inputs:
    azureSubscription: 'AuthSdkResourceManager'
    KeyVaultName: 'msidlabs'
    SecretsFilter: 'LabVaultAccessCert'

- powershell: |
   $kvSecretBytes = [System.Convert]::FromBase64String('$(LabVaultAccessCert)')
   $pfxPath = '$(Build.SourcesDirectory)' + "/TestCert.pfx"
   [System.IO.File]::WriteAllBytes($pfxPath, $kvSecretBytes)

   # Convert PFX to PEM format
   $cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate2
   $cert.Import($pfxPath)
   $pemCertPath = '$(Build.SourcesDirectory)' + "/TestCert.pem"
   $pemKeyPath = '$(Build.SourcesDirectory)' + "/TestCert.key"
   [System.IO.File]::WriteAllText($pemCertPath, $cert.GetRawCertDataString())
   [System.IO.File]::WriteAllText($pemKeyPath, $cert.GetRawCertDataString())

  displayName: 'Convert and Install Certificate for Linux'
  
- task: Go@0
  inputs:       
    command: 'test'
    arguments: '-race -short ./apps/cache/... ./apps/confidential/... ./apps/public/... ./apps/internal/...'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
  displayName: "Run Unit Tests"

- task: Go@0
  inputs:       
    command: 'test'
    arguments: '-race ./apps/tests/integration/...'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
  displayName: "Run Integration Tests"
  

