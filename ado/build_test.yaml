trigger: 
 - main

pool:
   vmImage: 'ubuntu-latest'

steps: 
- task: GoTool@0
  inputs:
    version: '1.22.3'
- task: Go@0
  inputs:
    command: 'get'
    arguments: '-d -v -t -d ./...'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
  displayName: "Install dependencies"
- task: Go@0
  inputs:
    command: 'build'
    arguments: './apps/...'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
  displayName: "Build"
# - task: Go@0
#   inputs:       
#     command: 'test'
#     arguments: '-race -short ./apps/cache/... ./apps/confidential/... ./apps/public/... ./apps/internal/...'
#     workingDirectory: '$(System.DefaultWorkingDirectory)'
#   displayName: "Run Unit Tests"

- task: AzureKeyVault@2
  displayName: 'Connect to Key Vault'
  inputs:
    azureSubscription: 'AuthSdkResourceManager' # string. Workload identity service connection to use managed identity authentication
    KeyVaultName: 'msidlabs' # string. Required. The name of the Key Vault containing the secrets.
    #setting secrets filter to fetch only MSIDLABCertificate cert from the vault
    SecretsFilter: 'LabAuth' # string. Required. Specifies the secret to download. Use '*' for all secrets.
    #RunAsPreJob: false # boolean. Make secrets available to whole job. Default: false.

# - powershell: |
#    $kvSecretBytes = [System.Convert]::FromBase64String('$(LabAuth)')
#    $certCollection = New-Object System.Security.Cryptography.X509Certificates.X509Certificate2Collection
#    $certCollection.Import($kvSecretBytes, $null, [System.Security.Cryptography.X509Certificates.X509KeyStorageFlags]::Exportable)

#    $protectedCertificateBytes = $certCollection.Export([System.Security.Cryptography.X509Certificates.X509ContentType]::Pkcs12)
#    $pfxPath = '$(Build.SourcesDirectory)' + "\TestCert.pfx"
#    [System.IO.File]::WriteAllBytes($pfxPath, $protectedCertificateBytes)

#    Import-PfxCertificate -FilePath $pfxPath -CertStoreLocation Cert:\LocalMachine\My

#   displayName: 'Install Keyvault Secrets'
  
- script: |
    echo $(LabAuth) | base64 -d > cert.pfx
    sudo apt-get install -y libnss3-tools
    pk12util -i cert.pfx -d sql:/etc/pki/nssdb -W ""
  displayName: 'Install Keyvault Secrets'

- task: Go@0
  inputs:       
    command: 'test'
    arguments: '-race ./apps/tests/integration/...'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
  displayName: "Run Integration Tests"
  

